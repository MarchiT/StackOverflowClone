@page "{id:int?}"
@model DetailsModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Question Details";
}

<h2>@ViewData["Title"]</h2>

<div>
    <h4>Question</h4>
    <hr />

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Question.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Question.Body)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Body)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Question.Publisher)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Publisher.Id)
        </dd>
    </dl>
    
    <div>
        @if (SignInManager.IsSignedIn(User) && UserManager.GetUserId(User).Equals(Model.Question.Publisher.Id))
        {
            <a asp-page="./Edit" asp-route-id="@Model.Question.Id">Edit</a> 
            @: |
        }
        <a asp-page="./Index">Back to List</a>
    </div>
    <hr />

    <h5 class="badge badge-secondary">Tags</h5>
    <div>
        @foreach(var item in @Model.Question.QuestionTags)
        {
            <a asp-page="/Tags/Index" asp-route-name="@item.Tag.Name" class="btn btn-primary">@item.Tag.Name</a>
        }
    </div>
    <hr />

    <h5 class="badge badge-secondary">Answers</h5>
    <div>
        <ul>
            @foreach (var contact in Model.Question.Answers)
            {
                <li>@contact.Vote vote: @contact.Body</li>
            }
        </ul>
    </div>
    @if (SignInManager.IsSignedIn(User))
    {    
    <div class="row">
        <div class="col-md-4">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Answer.Body" class="control-label"></label>
                    <input asp-for="Answer.Body" class="form-control" />
                    <span asp-validation-for="Answer.Body" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" asp-page-handler="answer" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>
    }
    <hr />

    <h5 class="badge badge-secondary">Comments</h5>
    <div class="comments">
        <ul class="list-group">
            @foreach (var comment in @Model.Question.Comments)
            {
                <li class="list-group-item">
                    <em>@comment.Publisher.UserName</em>
                    &nbspcommented:

                    @comment.Body
                </li>
            }
        </ul>
    </div>

    @if (SignInManager.IsSignedIn(User))
    {
    <div class="card">
        <div class="card-block">
            <form method="POST">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Comment.Id" />     
                <div class="form-group">
                    <textarea name="body" asp-for="Comment.Body" placeholder="Your comment here." class="form-control" required></textarea>
                </div>
                <div class="form-group">
                    <input type="submit" asp-page-handler="comment" value="Add comment" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>
    }
</div>